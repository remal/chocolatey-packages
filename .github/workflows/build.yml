name: build

on:
  push:
    branches:
    - main
  pull_request: { }
  workflow_dispatch: { }

env:
  CHANGED_PACKAGES_FILE: 'changed-packages.tmp.txt'
  CHOCO_REMAL_PACKAGES_REPOSITORY: 'https://f.feedz.io/remal/chocolatey-packages/nuget'
  LATEST_JDK_VERSION: 19

defaults:
  run:
    shell: cmd

jobs:
  build:
    if: ${{
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
      || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[push-back]'))
      || github.event_name != 'push'
      }}
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Get changed files
      id: get-changed-files
      uses: tj-actions/changed-files@v39
      with:
        json: true
        escape_json: false
        quotepath: false
    - name: Get changed packages
      id: get-changed-packages
      uses: actions/github-script@v6
      env:
        CHANGED_FILES_JSON: ${{steps.get-changed-files.outputs.all_modified_files}}
      with:
        script: |
          const fs = require('fs')
          const packageNames = fs.readdirSync('.')
            .filter(file => !file.startsWith('.'))
            .filter(file => fs.statSync(file).isDirectory())
            .filter(packageName => fs.statSync(`${packageName}/${packageName}.nuspec`).isFile())
          core.info(`packageNames: ${packageNames.join(' ')}`)
          const changedFiles = JSON.parse(process.env.CHANGED_FILES_JSON)
            .map(file => file.replaceAll('\\', '/'))
          core.info(`changedFiles: ${changedFiles.join(' ')}`)
          const changedPackages = packageNames
            .filter(packageName => changedFiles.some(file => file.startsWith(`${packageName}/`)))
          if (changedFiles.some(file => file.includes('jdk-generate'))) {
            const changedJdkPackages = []
            for (let jdkVer = 8; jdkVer <= ${{env.LATEST_JDK_VERSION}}; ++jdkVer) {
              changedJdkPackages.push(`remal-jdk${jdkVer}`)
              changedJdkPackages.push(`remal-jdk${jdkVer}-main`)
            }
            changedJdkPackages.forEach(packageName => {
                if (!changedPackages.includes(packageName)) {
                  changedPackages.push(packageName)
                }
              })
            core.info(`changedJdkPackages: ${changedJdkPackages.join(' ')}`)
            core.setOutput('jdk', 'true')
          }
          if (changedFiles.some(file => file.includes('npp-plugins-generate'))) {
            const changedNppPluginPackages = require('./npp-plugins-generate-config')
              .map(plugin => plugin.packageName)
            changedNppPluginPackages.forEach(packageName => {
                if (!changedPackages.includes(packageName)) {
                  changedPackages.push(packageName)
                }
              })
            core.info(`changedNppPluginPackages: ${changedNppPluginPackages.join(' ')}`)
            core.setOutput('nppPlugins', 'true')
          }
          core.info(`changedPackages: ${changedPackages.join(' ')}`)
          core.setOutput('count', changedPackages.length)
          fs.writeFileSync('changed-packages.tmp.txt', changedPackages.join('\n'), 'utf8')


    - name: Setup Node.js
      if: ${{
        steps.get-changed-packages.outputs.jdk == 'true'
        || steps.get-changed-packages.outputs.nppPlugins == 'true'
        }}
      uses: actions/setup-node@v3
      with:
        node-version: 20
    - name: Generate JDK packages
      if: ${{steps.get-changed-packages.outputs.jdk == 'true'}}
      run: |
        node jdk-generate
    - name: Generate Notepad++ plugin packages
      if: ${{steps.get-changed-packages.outputs.nppPlugins == 'true'}}
      run: |
        node npp-plugins-generate


    - name: Update versions
      if: ${{steps.get-changed-packages.outputs.count > 0}}
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs')
          const version = Math.floor(Date.now() / 1000)
          const packageNames = fs.readFileSync('changed-packages.tmp.txt', 'utf8').split('\n')
            .map(it => it.trim())
            .filter(it => !!it.length)
            .filter(it => fs.statSync(it).isDirectory())
          packageNames.forEach(packageName => {
            const packageNuspecFile = `${packageName}/${packageName}.nuspec`
            if (!fs.statSync(packageNuspecFile).isFile()) { return }
            core.info(`Setting version of ${packageName} to ${version}`)
            let content = fs.readFileSync(packageNuspecFile, 'utf8').replace(/^\uFEFF/, '')
            content = content.replace(/<version>[\s\S]*?<\/version>/, `<version>${version}.0.0</version>`)
            fs.writeFileSync(packageNuspecFile, '\uFEFF' + content, 'utf8')
          })

    - name: Pack only
      if: ${{
        steps.get-changed-packages.outputs.count > 0
        && (
          (github.event_name == 'push' && github.ref != 'refs/heads/main')
          || (github.event_name != 'push')
        )
        }}
      run: |
        build-changed "N"
        if !ERRORLEVEL! NEQ 0 (
          exit !ERRORLEVEL!
        )

    - name: Pack and publish
      if: ${{
        steps.get-changed-packages.outputs.count > 0
        && github.event_name == 'push'
        && github.ref == 'refs/heads/main'
        }}
      run: |
        build-changed "Y" "${{secrets.FEEDZ_IO_TOKEN}}"
        if !ERRORLEVEL! NEQ 0 (
          exit !ERRORLEVEL!
        )


    - name: Push back
      env:
        PUSH_BACK_TOKEN: ${{secrets.PUSH_BACK_TOKEN}}
      if: ${{env.PUSH_BACK_TOKEN && github.event_name == 'push' && github.ref == 'refs/heads/main'}}
      uses: remal-github-actions/push-back@v1
      with:
        githubToken: ${{env.PUSH_BACK_TOKEN}}
        message: '[push-back] Push-back updated files during build'
